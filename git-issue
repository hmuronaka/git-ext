#!/usr/bin/env ruby

require 'git'
require_relative './git_ext'

module GitExt

  include Lib

  # you have to define git_ext file on your prject directory.
  #
  # ex: git_ext
  # # get issue-id from branchname by regexp.
  # issue_pattern /issue_([\d]+)$/ do |m| # Regexp.last_matchが入ります
  #   m[1] 
  # end
  #
  # # get a url of an issue page.
  # issue_url do |issue|
  #   "http://issue.com/view/#{issue}"
  # end

  def usage
    puts 'git issue # open browser and show current branch\'s issue'
  end

  def main 
    git_ext_path = File.join(Dir.pwd, "git_ext")
    error("not found git_ext file") if not File.exists?(git_ext_path)

    config = Config.new
    config.read(git_ext_path)

    g = Git.open(Dir.pwd)

    branch_name = nil
    if ARGV.empty?
      branch_name = g.current_branch
    else
      branch = find_from_branch(g, :local, ARGV[0])
      branch = find_from_branch(g, :remote, ARGV[0]) if branch == nil
      branch_name = branch.name if branch
    end

    error("#{branch_name} didn't match #{config.issue_pattern}") if not branch_name =~ /#{config.issue_pattern}/
    
    issue = (config.issue_block ? config.issue_block.call(Regexp.last_match) : $1)
    url = config.issue_url_block.call(issue)
    `open #{url}`
  end
end

include GitExt
GitExt::main()
